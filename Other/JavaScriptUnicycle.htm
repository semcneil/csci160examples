<!DOCTYPE HTML>
<html>
  <head>
    <title>JavaScript Unicycle Example</title>
  </head>

  <body>
    <h1>JavaScript Unicycle Example</h1>
        <p>Number of spokes: <input id='nSpokes' onKeyDown='userKeyDown(event)' size='5' /> <button onClick='userSubmit()'>Submit</button></p>
	<canvas id="myCanvas" width="640" height="480" style="border:1px solid #c3c3c3">
		Your browser does not support html5
	</canvas>

    <script type="text/javascript">

      // This animation version is based off of:
      // http://www.html5canvastutorials.com/advanced/html5-canvas-oscillation-animation
      // Much of the JavaScript ideas come from http://www.hunlock.com/blogs/Essential_Javascript_--_A_Javascript_Tutorial
	var nSpokes = 3;
      document.getElementById('nSpokes').value = nSpokes;

      window.requestAnimFrame = (function(callback) {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||
        function(callback) {
          window.setTimeout(callback, 1000 / 60);
        };
      })();

	  function drawUni(myRectangle, context, time, amplitude) {
	    // Draw Unicycle body
		context.beginPath();
		context.moveTo(myRectangle.x, myRectangle.y);
		context.lineTo(myRectangle.x, myRectangle.y-150);
		context.lineWidth = myRectangle.borderWidth;
		context.stroke();
		
		context.beginPath();
		context.moveTo(myRectangle.x-20, myRectangle.y-150);
		context.lineTo(myRectangle.x+20, myRectangle.y-150);
		context.lineWidth = myRectangle.borderWidth;
		context.stroke();

		// Draw wheel
		context.beginPath();
		context.arc(myRectangle.x, myRectangle.y, myRectangle.height, 0, 2* Math.PI, false);
		context.fillStyle = '#8ED6FF';
		context.fill();
		context.lineWidth = myRectangle.borderWidth;
		context.strokeStyle = 'black';
		context.stroke();
		
		// Draw spokes
		for(ii = 0; ii < nSpokes; ii++)
		{		
			drawSpoke(myRectangle, ii/nSpokes*(4*myRectangle.height*Math.PI));
		}
	  }
	  
	  function drawSpoke(myRectangle, offset)
	  {
		context.beginPath();
		context.moveTo(myRectangle.x, myRectangle.y);
		var spokeLen = myRectangle.height;
		context.lineTo(myRectangle.x - spokeLen*Math.sin((myRectangle.x + offset)/(2*myRectangle.height*Math.PI)*Math.PI), 
		myRectangle.y + spokeLen*Math.cos((myRectangle.x+offset)/(2*myRectangle.height*Math.PI)*Math.PI));
 		context.lineWidth = myRectangle.borderWidth/3;
		context.stroke();
	  }

      function animate(myRectangle, canvas, context, startTime) {
        // update
        var time = (new Date()).getTime() - startTime;
        var amplitude = 300;

        // in ms
        var period = 6000;
        var centerX = canvas.width / 2;
        var nextX = amplitude * Math.sin(time * 2 * Math.PI / period) + centerX;
        myRectangle.x = nextX;

        // clear the canvas
        context.clearRect(0, 0, canvas.width, canvas.height);

        // draw in here
/***** ONLY EDIT AFTER THIS LINE *****/
	drawUni(myRectangle, context, time, amplitude);

/***** ONLY EDIT BEFORE THIS LINE *****/

        // request new frame
        requestAnimFrame(function() {
          animate(myRectangle, canvas, context, startTime);
        });
      }
      var canvas = document.getElementById('myCanvas');
      var context = canvas.getContext('2d');

      var myRectangle = {
        x: 250,
        y: 400,
        width: 100,
        height: 50,
        borderWidth: 5
      };


      // wait one second before starting animation
      setTimeout(function() {
        var startTime = (new Date()).getTime();
        animate(myRectangle, canvas, context, startTime);
      }, 1000);
 
     function userSubmit() {
       nSpokes = document.getElementById('nSpokes').value;
     }

     function userKeyDown(e) {
      if(e.keyCode == 13) {
        userSubmit();
      }
    }

    </script>
  </body>
</html>
